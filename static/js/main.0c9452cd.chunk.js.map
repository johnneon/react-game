{"version":3,"sources":["variables.ts","utils/utils.ts","components/Game/Snake.tsx","components/Game/Food.tsx","components/Game/Stone.tsx","components/Game/Axis.tsx","context/GameContext.tsx","utils/save.ts","components/Game/Game.tsx","components/UI/Header.tsx","components/UI/Footer.tsx","components/UI/MenuHeader.tsx","components/UI/GeneralMenu.tsx","components/UI/Checkbox.tsx","components/UI/RadioControls.tsx","components/UI/GameMenu.tsx","components/UI/SliderControl.tsx","components/UI/SoundControls.tsx","components/UI/SoundMenu.tsx","components/UI/ScoreTable.tsx","components/UI/GameOverScreen.tsx","components/UI/Menu.tsx","themes/CustomThemeProvider.tsx","hooks/sound.hook.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["variables","getRandomCoordinates","Math","floor","random","randomColor","colors","length","DEFAULT_SNAKE","SnakeDot","styled","div","attrs","props","style","top","left","opacity","head","skin","isLightTheme","Snake","snakeDots","num","procient","map","el","ind","toFixed","reverse","calculateOpacity","dot","i","scale","keyframes","FoodItem","Food","StoneItem","Stone","DOWN","RIGHT","Line","direction","number","Axis","quantity","noop","GameContext","createContext","mode","score","pouse","isFullScreen","endGame","sound","isGameStarted","setFullScreen","changeTheme","toggleMenu","resetGame","musik","eatSoundEffect","endSoundEffect","setSound","changeMode","changeSkin","startGame","useGameContext","useContext","SCORE","getScore","data","window","localStorage","getItem","JSON","parse","UP","LEFT","KEY_A","KEY_W","KEY_D","KEY_S","KEY_ESCAPE","STEP","EASY_MODE","HARD_MODE","GAME_STATE","GameField","fullScreen","Game","interval","isStoped","commandQueue","grid","initialState","handleKeyDown","event","code","state","push","play","togglePouse","commandObserve","command","shift","setState","doMove","newHead","moveSnake","dots","Array","from","gameOver","reset","eanlargeSnake","snake","unshift","increaseSpeed","moveSpeed","checkIfEat","foodCords","headTop","headLeft","foodTop","foodLeft","find","dotTop","dotLeft","checkCoordinates","updateScore","createStones","snakeSkin","checkIfCollapsed","pop","forEach","checkIfOutOfBorderes","checkIfEatStone","stoneCords","stoneTop","stoneLeft","clearInterval","setInterval","componentDidMount","addEventListener","savedState","storageName","getGameState","e","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","isChanged","console","log","setItem","stringify","numOfStones","stones","bind","fill","this","context","stone","className","React","Component","contextType","useStyles","makeStyles","theme","title","flexGrow","color","palette","primary","contrastText","wrapper","backgroundColor","main","text","Header","classes","AppBar","position","Toolbar","IconButton","onClick","disabled","edge","aria-label","Typography","variant","footer","display","alignItems","justifyContent","width","height","logo","Footer","Box","Link","href","target","src","alt","createStyles","fullScreenBtn","right","themeBtn","soundBtn","paddingTop","MenuHeader","Grid","item","xs","align","component","children","exit","enter","GAME_SETTINGS","SOUND_SETTINGS","btn","marginBottom","GeneralMenu","container","spacing","Button","data-name","changeMenu","root","checked","Checkbox","value","label","FormControlLabel","labelPlacement","control","Radio","legend","textAlign","focused","RadioControls","setValue","justify","FormControl","FormLabel","RadioGroup","row","onChange","controls","GAME_SETTINGS_INFO","NORMAL_MODE","COLORED_SNAKE","margin","GameMenu","gameControls","colorControls","Tooltip","goBack","thumb","boxShadow","active","valueLabel","icon","bar","SliderControl","id","gutterBottom","Slider","volume","setVolume","SoundControls","SoundMenu","listItem","borderBottom","flex","ScoreTable","List","dense","scoreItem","name","ListItem","ListItemText","CssTextField","withStyles","borderBottomColor","borderColor","TextField","GameOverScreen","useState","setName","error","setError","handleClick","test","prevScore","sortedData","sort","a","b","splice","saveScore","onKeyPress","key","helperText","GENERAL","zIndex","padding","background","secondary","transition","visibility","Menu","menu","setMenu","changeMenuHandler","menuPage","backToGeneral","page","provider","dark","createMuiTheme","common","black","white","type","light","success","paper","default","hint","typography","htmlFontSize","h1","fontSize","fontWeight","h2","h3","h4","h5","h6","body1","body2","subtitle1","CustomThemeProvider","ThemeProvider","useSoundControl","audioUrl","loop","playAgain","setplayAgain","options","onend","useSound","pause","stop","isPlaying","APP_STATE","flexDirection","gameWrap","App","screen","useFullScreenHandle","open","setOpen","setScore","setIsLightTheme","setEndGame","setMode","setSkin","setIsChanged","setIsGameStarted","useEffect","savedAppState","getAppState","updateAppState","reportChange","useCallback","start","Provider","modeName","handle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c9452cd.chunk.js","sourcesContent":["export const variables = {\n  UP: 'UP',\n  DOWN: 'DOWN',\n  LEFT: 'LEFT',\n  RIGHT: 'RIGHT',\n  KEY_W: 'KeyW',\n  KEY_A: 'KeyA',\n  KEY_S: 'KeyS',\n  KEY_D: 'KeyD',\n  KEY_ESCAPE: 'Escape',\n  STEP: 2,\n  GAME_SETTINGS_INFO: 'Easy: Open borders, speed doesn`t increase. Normal: Close borders, increasing speed. Hard: Close borders, increasing speed, enemy items. After you WARNING!!! After changing the mode, the game will restart!',\n  EASY_MODE: \"easy\",\n  NORMAL_MODE: \"normal\",\n  HARD_MODE: \"hard\",\n  DEFAULT_SNAKE: \"default\",\n  COLORED_SNAKE: \"colored\",\n  GENERAL: 'general',\n  GAME_SETTINGS: 'game',\n  SOUND_SETTINGS: 'sound',\n  SCORE: 'score',\n  APP_STATE: 'app_state',\n  GAME_STATE: 'game_state',\n};","import { IRotateTerns } from \"../interfaces\";\nimport { variables } from '../variables';\n\nconst {\n  UP,\n  DOWN,\n  RIGHT,\n  LEFT,\n} = variables;\n\nexport const getRandomCoordinates = (): number[] => {\n  let min = 1;\n  let max = 98;\n  let x = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n  let y = Math.floor((Math.random() * (max - min + 1) + min) / 2) * 2;\n\n  return [x, y];\n};\n\nexport const rotationCalculate = ({\n  top,\n  nextTop,\n  prevTop,\n  left,\n  nextLeft,\n  prevLeft\n}: IRotateTerns): string => {\n  let ternPart: string = '';\n\n  if (top < nextTop && top === prevTop) {\n    if (left < prevLeft) {\n      ternPart = UP;\n    } else {\n      ternPart = RIGHT;\n    }\n  } else if (top > nextTop && top === prevTop) {\n    if (left > prevLeft) {\n      ternPart = DOWN;\n    } else {\n      ternPart = LEFT;\n    }\n  }\n\n  if (left < nextLeft && left === prevLeft) {\n    if (top < prevTop) {\n      ternPart = UP;\n    } else {\n      ternPart = LEFT;\n    }\n  } else if (left > nextLeft && left === prevLeft) {\n    if (top > prevTop) {\n      ternPart = DOWN;\n    } else {\n      ternPart = RIGHT;\n    }\n  }\n\n  return ternPart;\n};\n\nexport const calculateOpacity = (num: Array<number[]>): number[] => {\n  const len = num.length;\n  \n  const divider = 1.2;\n  const hundredPercent = 100;\n  const procient = hundredPercent / len;\n\n  const result = num\n    .map((el, ind) => {\n      const result = (hundredPercent - (procient * ind / divider)) / hundredPercent;\n      return +result.toFixed(2);\n    })\n    .reverse();\n\n  return result;\n};\n\nexport const randomColor = (): string => {\n  const colors: string[] = [\n    '244, 67, 54',\n    '224, 64, 251',\n    '63, 81, 181',\n    '3, 169, 244',\n    '0, 188, 212',\n    '118, 255, 3',\n    '255, 235, 59',\n    '96, 125, 139',\n    '0, 229, 255',\n    '255, 109, 0',\n    '255, 64, 129'\n  ];\n\n  return colors[Math.floor((Math.random()*colors.length))];\n};","import React from 'react';\nimport styled from 'styled-components';\nimport { calculateOpacity } from '../../utils/utils';\nimport { variables } from '../../variables';\n\nconst {\n  DEFAULT_SNAKE\n} = variables;\ninterface ISnakeProps {\n  snakeDots: Array<number[]>;\n  isLightTheme: boolean;\n  skin: string;\n}\n\ntype StyledProps = {\n  head: boolean;\n  opacity: number;\n  top: number;\n  left: number;\n  isLightTheme: boolean;\n  skin?: string;\n}\n\nconst SnakeDot = styled.div.attrs((props: StyledProps) => ({\n  style: {\n    top: `${props.top}%`,\n    left: `${props.left}%`,\n    opacity: `${props.opacity}`\n  }\n}))`\n  width: calc(2% + 1px);\n  height: calc(2% + 1px);\n\n  position: absolute;\n  z-index: ${(props: StyledProps) => props.head ? '1' : '2'};\n  \n  \n  box-shadow: ${(props: StyledProps) => {\n    if (props.skin !== DEFAULT_SNAKE) {\n      return props.head ? `0 0 15px 3px rgba(${props.skin}, .5)` : '0';\n    }\n    return props.head ? `0 0 15px 3px rgba(${props.isLightTheme ? '0, 0, 0,' : '255, 255, 255,'} .5)` : '0';\n  }};\n  \n  background: rgb${(props: StyledProps) => {\n    if (props.skin !== DEFAULT_SNAKE) {\n      return `(${props.skin})`;\n    }\n    return props.isLightTheme ? '(0, 0, 0)' : '(255, 255, 255)';\n  }};\n`;\n\nconst Snake: React.FunctionComponent<ISnakeProps> = (props) => {\n  const { snakeDots, skin } = props;\n\n  const opacity = calculateOpacity(snakeDots);\n\n  return (\n    <>\n      {props.snakeDots.map((dot: number[], i) => {\n        const [top, left] = dot;\n\n        return (\n          <SnakeDot\n            skin={skin}\n            opacity={opacity[i]}\n            head={i === props.snakeDots.length - 1}\n            top={top}\n            left={left}\n            isLightTheme={props.isLightTheme}\n            key={i}\n          />\n        );\n      })}\n    </>\n  );\n};\n\nexport default Snake;\n","import * as React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\ninterface IFoodProps {\n  dot: number[];\n}\n\nconst scale = keyframes`\n  0% {\n    transform: scale(1.2);\n  }\n\n  50% {\n    transform: scale(.8);\n  }\n\n  100% {\n    transform: scale(1.2);\n  }\n`;\n\nconst FoodItem = styled.div`\n  position: absolute;\n  z-index: 1;\n  width: calc(2% + 1px);\n  height: calc(2% + 1px);\n  background: #15b104;\n  box-shadow: 0 0 15px 3px rgba(21, 177, 4, .7);\n  border-bottom: 1px solid #15b104;\n  border-right: 1px solid #15b104;\n  animation: ${scale} 2s linear infinite;\n`;\n\nconst Food: React.FunctionComponent<IFoodProps> = (props) => {\n  const [top, left] = props.dot;\n  const style = {\n    top: `${top}%`,\n    left: `${left}%`\n  }\n\n  return <FoodItem style={style} />;\n};\n\nexport default Food;\n","import * as React from 'react';\nimport styled, { keyframes } from 'styled-components';\n\ninterface IStoneProps {\n  dot: number[];\n}\n\nconst scale = keyframes`\n  0% {\n    transform: scale(1.2);\n  }\n\n  50% {\n    transform: scale(.8);\n  }\n\n  100% {\n    transform: scale(1.2);\n  }\n`;\n\nconst StoneItem = styled.div`\n  position: absolute;\n  z-index: 1;\n  width: calc(2% + 1px);\n  height: calc(2% + 1px);\n  background: #f44336;\n  box-shadow: 0 0 15px 3px rgba(244, 67, 54, .7);\n  border-bottom: 1px solid #f44336;\n  border-right: 1px solid #f44336;\n  animation: ${scale} 2s linear infinite;\n`;\n\nconst Stone: React.FunctionComponent<IStoneProps> = (props) => {\n  const [top, left] = props.dot;\n  const style = {\n    top: `${top}%`,\n    left: `${left}%`\n  }\n\n  return <StoneItem style={style} />;\n};\n\nexport default Stone;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { variables } from '../../variables';\n\nconst {\n  DOWN,\n  RIGHT\n} = variables;\n\ninterface IAxisProps {\n  isLightTheme: boolean;\n  direction: string;\n  quantity: null[];\n}\n\ntype StyledProps = {\n  isLightTheme: boolean;\n  direction: string;\n  number: number;\n}\n\nconst Line = styled.div`\n  position: absolute;\n  ${(props: StyledProps) => {\n    let style = '';\n    if (props.direction === DOWN) {\n      style = `\n        width: 2%;\n        height: 100%;\n        border-left: 1px solid;\n        top: 0;\n        left: ${props.number * 2}%;\n      `;\n    } else if (props.direction === RIGHT) {\n      style = `\n        width: 100%;\n        height: 2%;\n        border-top: 1px solid;\n        top: ${props.number * 2}%;\n        left: 0;\n      `;\n    }\n\n    return style;\n  }}\n  border-color: ${(props: StyledProps) => props.isLightTheme ? 'rgba(0, 0, 0, .3)' : 'rgba(255, 255, 255, .3)'};\n\n  &:first-child {\n    border: 0;\n  }\n`;\n\nconst Axis: React.FunctionComponent<IAxisProps> = (props) => {\n  const { isLightTheme, direction } = props;\n  \n  return (\n    <>\n      {props.quantity.map((el, i) => <Line isLightTheme={isLightTheme} number={i} direction={direction} key={i} />)}\n    </>\n  );\n};\n\nexport default Axis;\n","import { createContext, useContext } from 'react';\n\nexport type IGameContent = {\n  pouse: boolean,\n  endGame: boolean;\n  isLightTheme: boolean | null,\n  isFullScreen: boolean | null,\n  sound: boolean | null;\n  isGameStarted: boolean | null;\n  score: number;\n  setFullScreen: any,\n  musik: any;\n  eatSoundEffect: any;\n  endSoundEffect: any;\n  mode: string;\n  skin: string,\n  changeMode: (modeName: string) => void;\n  changeSkin: (skin: string) => void;\n  toggleMenu: () => void;\n  changeTheme: () => void;\n  resetGame: () => void;\n  setSound: () => void;\n  startGame: (start: boolean) => void;\n}\n\nfunction noop() {}\n\nexport const GameContext = createContext<IGameContent>({\n  mode: '',\n  skin: '',\n  score: 0,\n  pouse: true,\n  isLightTheme: null,\n  isFullScreen: null,\n  endGame: false,\n  sound: null,\n  isGameStarted: null,\n  setFullScreen: noop,\n  changeTheme: noop,\n  toggleMenu: noop,\n  resetGame: noop,\n  musik: noop,\n  eatSoundEffect: noop,\n  endSoundEffect: noop,\n  setSound: noop,\n  changeMode: noop,\n  changeSkin: noop,\n  startGame: noop\n});\n\nexport const useGameContext = () => useContext(GameContext)","import { variables } from '../variables';\n\nconst { SCORE } = variables;\nexport interface IAppState {\n  open: boolean,\n  score: number,\n  isLightTheme: boolean,\n  sound: boolean,\n  mode: string,\n  skin: string,\n  isGameStarted: boolean;\n}\n\nexport interface IGameState {\n  foodCords: number[];\n  stoneCords: Array<number[]>;\n  direction: string;\n  snakeDots: Array<number[]>;\n  moveSpeed: number;\n  snakeSkin: string;\n}\n\nexport interface IScore {\n  name: string;\n  score: number;\n}\n\nexport const saveAppState = (data: IAppState, storageName: string): void => {\n  window.localStorage.setItem(storageName, JSON.stringify(data));\n}\n\nexport const getAppState = (storageName: string): IAppState | null => {\n  const data = window.localStorage.getItem(storageName);\n\n  if (!data) {\n    return null;\n  }\n\n  return JSON.parse(data || '{}');\n}\n\nexport const saveGameState = (data: IGameState, storageName: string): void => {\n  window.localStorage.setItem(storageName, JSON.stringify(data));\n}\n\nexport const getGameState = (storageName: string): IGameState | null => {\n  const data = window.localStorage.getItem(storageName);\n\n  if (!data) {\n    return null;\n  }\n\n  return JSON.parse(data || '{}');\n}\n\nexport const getScore = (): IScore[] => {\n  const data = window.localStorage.getItem(SCORE);\n\n  if (!data) {\n    return [];\n  }\n\n  return JSON.parse(data || '[]');\n}\n\nexport const saveScore = (score: IScore) => {\n  try {\n    const prevScore: IScore[] = getScore();\n    prevScore?.push(score);\n\n    const sortedData = prevScore?.sort((a, b) => b.score - a.score);\n\n    if (sortedData.length > 10) {\n      console.log(sortedData);\n      sortedData.splice(-1, 1);\n    }\n\n    window.localStorage.setItem(SCORE, JSON.stringify(sortedData));\n  } catch (e) {\n    console.log(e);\n    return;\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Snake from './Snake';\nimport Food from './Food';\nimport Stone from './Stone';\nimport { getRandomCoordinates, randomColor } from '../../utils/utils';\nimport { variables } from '../../variables';\nimport Axis from './Axis';\nimport { GameContext } from '../../context/GameContext';\nimport { getGameState, saveGameState } from '../../utils/save';\n\nconst {\n  UP,\n  DOWN,\n  RIGHT,\n  LEFT,\n  KEY_A,\n  KEY_W,\n  KEY_D,\n  KEY_S,\n  KEY_ESCAPE,\n  STEP,\n  EASY_MODE,\n  HARD_MODE,\n  DEFAULT_SNAKE,\n  GAME_STATE\n} = variables;\ninterface IGameProps {\n  togglePouse: VoidFunction;\n  updateScore: VoidFunction;\n  gameOver: VoidFunction;\n  mode: string;\n  skin: string;\n  isChanged: boolean;\n  startGame: (start: boolean) => void;\n}\n\ninterface IGameState {\n  foodCords: number[];\n  stoneCords: Array<number[]>;\n  direction: string;\n  snakeDots: Array<number[]>;\n  moveSpeed: number;\n  snakeSkin: string;\n}\n\ntype StyledProps = {\n  fullScreen: boolean;\n  isLightTheme: boolean;\n}\n\nconst GameField = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  width: ${(props: StyledProps) => props.fullScreen ? 'calc(100vh - 128px)' : '600px'};\n  height: ${(props: StyledProps) => props.fullScreen ? 'calc(100vh - 128px)' : '600px'};\n  margin: 0 auto;\n  border: 2px solid rgba(255, 255, 255, .3);\n  background: ${(props: StyledProps) => props.isLightTheme ? '#ffffff' : '#222'};\n  position: relative;\n  box-shadow: 0 0 20px 0px rgba(255, 255, 255, .3);\n\n  @media (max-width: 768px) {\n    width: 100vw;\n    height: 100vw;\n  }\n`;\n\nexport default class Game extends React.Component<IGameProps, IGameState> {\n  interval: number;\n  isStoped: boolean;\n  commandQueue: string[];\n  grid: null[];\n  initialState: {\n    foodCords: number[];\n    stoneCords: Array<number[]>;\n    direction: string;\n    snakeDots: Array<number[]>;\n    moveSpeed: number;\n    snakeSkin: string;\n  }\n\n  constructor(props: IGameProps | Readonly<IGameProps>) {\n    super(props);\n\n    this.initialState = {\n      foodCords: getRandomCoordinates(),\n      stoneCords: [],\n      direction: UP,\n      moveSpeed: 100,\n      snakeSkin: DEFAULT_SNAKE,\n      snakeDots: [\n        [52,48],\n        [50, 48],\n        [48, 48],\n      ]\n    };\n\n    this.state  = this.initialState;\n\n    this.interval = 0;\n    this.isStoped = false;\n    this.commandQueue = [];\n    this.moveSnake = this.moveSnake.bind(this);\n    this.grid = new Array(50).fill(null);\n  }\n\n  static contextType = GameContext;\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    const { code } = event;\n    const { direction } = this.state;\n\n    if (code === KEY_W && direction !== DOWN) {\n      this.commandQueue.push(UP);\n    } else if (code === KEY_S && direction !== UP) {\n      this.commandQueue.push(DOWN);\n    } else if (code === KEY_A && direction !== RIGHT) {\n      this.commandQueue.push(LEFT);\n    } else if (code === KEY_D && direction !== LEFT) {\n      this.commandQueue.push(RIGHT);\n    } else if (code === KEY_ESCAPE) {\n      if (!this.isStoped) {\n        this.isStoped = true;\n        this.pouse();\n        this.props.togglePouse();\n      } else {\n        this.isStoped = false;\n        this.play();\n        this.props.togglePouse();\n      }\n    }\n  }\n\n  commandObserve = () => {\n    if (this.commandQueue.length > 0) {\n      const command = this.commandQueue.shift() || '';\n      this.setState({ direction: command })\n    }\n  }\n\n  doMove = (head: number[], direction: string, mode: string): number[] => {\n    const [top, left] = head;\n    let newHead: number[] = [];\n\n    switch (direction) {\n      case UP:\n        newHead = [top - STEP, left];\n        break;\n      case DOWN:\n        newHead = [top + STEP, left];\n        break;\n      case LEFT:\n        newHead = [top, left - STEP];\n        break;\n      case RIGHT:\n        newHead = [top, left + STEP];\n        break;\n    }\n\n    if (mode === EASY_MODE) {\n      if (top >= 98 && direction === DOWN) {\n        newHead = [0, left];\n      }\n      if (top < 2 && direction === UP) {\n        newHead = [98, left];\n      }\n      if (left >= 98 && direction === RIGHT) {\n        newHead = [top, 0];\n      }\n      if (left < 2 && direction === LEFT) {\n        newHead = [top, 98];\n      }\n    }\n\n    return newHead;\n  }\n\n  moveSnake = () => {\n    const { direction, snakeDots } = this.state;\n    const { mode } = this.props;\n    const dots: Array<number[]> = Array.from(snakeDots);\n    const head = dots[dots.length - 1];\n    const newHead = this.doMove(head, direction, mode);\n\n    dots.push(newHead);\n    dots.shift();\n\n    this.commandObserve();\n    this.setState({ snakeDots: dots });\n  };\n\n  gameOver = () => {\n    const { gameOver, startGame } = this.props;\n\n    this.setState(this.initialState);\n    gameOver();\n    startGame(false);\n  }\n\n  reset = () => {\n    this.setState(this.initialState);\n  }\n\n  eanlargeSnake = () => {\n    const snake = [...this.state.snakeDots];\n\n    snake.unshift([]);\n\n    this.setState({\n      snakeDots: snake\n    });\n  }\n\n  increaseSpeed = () => {\n    if (this.state.moveSpeed > 50) {\n      this.setState({\n        moveSpeed: this.state.moveSpeed - 2\n      });\n      this.play();\n    }\n  }\n\n  checkIfEat = () => {\n    const { snakeDots, foodCords } = this.state;\n    const { mode, skin } = this.props;\n    const [headTop, headLeft] = snakeDots[snakeDots.length - 1];\n    const [foodTop, foodLeft] = foodCords;\n\n    const checkCoordinates = () => {\n      const [foodTop, foodLeft] = getRandomCoordinates();\n      const check = snakeDots.find(([dotTop, dotLeft]) => dotTop === foodTop && dotLeft === foodLeft);\n\n      if (check) {\n        return getRandomCoordinates();\n      }\n\n      return [foodTop, foodLeft];\n    }\n\n    if (headTop === foodTop && headLeft === foodLeft) {\n      this.setState({\n        foodCords: checkCoordinates()\n      });\n      this.props.updateScore();\n      this.eanlargeSnake();\n      if (mode !== EASY_MODE) {\n        this.increaseSpeed();\n      }\n      if (mode === HARD_MODE) {\n        this.createStones();\n      }\n      if (skin !== DEFAULT_SNAKE) {\n        this.setState({\n          snakeSkin: randomColor()\n        });\n      } else {\n        this.setState({\n          snakeSkin: DEFAULT_SNAKE\n        });\n      }\n    }\n\n  }\n\n  checkIfCollapsed = () => {\n    const snake = [...this.state.snakeDots];\n    const [headTop, headLeft] = snake[snake.length - 1];\n\n    snake.pop();\n\n    snake.forEach((dot) => {\n      const [dotTop, dotLeft] = dot;\n      if (headTop === dotTop && headLeft === dotLeft) {\n        this.gameOver();\n      }\n    });\n  }\n\n  checkIfOutOfBorderes = () => {\n    const [top, left] = this.state.snakeDots[this.state.snakeDots.length - 1];\n    if (top >= 100 || top < 0 || left >= 100 || left < 0) {\n      this.gameOver();\n    }\n  }\n\n  checkIfEatStone = () => {\n    const { stoneCords, snakeDots } = this.state;\n    const [headTop, headLeft] = snakeDots[snakeDots.length - 1];\n    const check = stoneCords?.find(([stoneTop, stoneLeft]) => stoneTop === headTop && stoneLeft === headLeft);\n    if (check) {\n      this.gameOver();\n    }\n  }\n\n  play = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n    this.interval = window.setInterval(this.moveSnake, this.state.moveSpeed);\n  }\n\n  pouse = () => {\n    clearInterval(this.interval);\n  }\n\n  componentDidMount = () => {\n    window.addEventListener('keydown', this.handleKeyDown);\n\n    try {\n      const savedState = getGameState(GAME_STATE);\n      if (savedState) {\n        this.setState({\n          ...savedState\n        });\n      }\n    } catch (e) {\n      return;\n    }\n  }\n\n  componentWillUnmount = () => {\n    if (this.interval) {\n      clearInterval(this.interval);\n    }\n\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentDidUpdate = (prevProps: IGameProps) => {\n    if (prevProps.isChanged !== this.props.isChanged) {\n      console.log(123);\n      this.reset();\n    }\n    const { mode } = this.props;\n    this.checkIfCollapsed();\n    this.checkIfEat();\n    if (mode !== EASY_MODE) {\n      this.checkIfOutOfBorderes();\n    }\n    if (mode === HARD_MODE) {\n      this.checkIfEatStone();\n    }\n    saveGameState(this.state, GAME_STATE);\n  }\n\n  createStones = () => {\n    const { snakeDots } = this.state;\n    \n    const checkCoordinates = (): Array<number[]> => {\n      let numOfStones = 1;\n\n      if (snakeDots.length > 3 && snakeDots.length < 8) {\n        numOfStones = 2;\n      } else if (snakeDots.length > 8 && snakeDots.length < 15) {\n        numOfStones = 3;\n      } else if (snakeDots.length > 15 && snakeDots.length < 23) {\n        numOfStones = 4;\n      } else if (snakeDots.length > 22) {\n        numOfStones = 5;\n      }\n\n      const stones = [];\n      for (let i = 0; i < numOfStones; i++) {\n        console.log(numOfStones);\n        const [stoneTop, stoneLeft] = getRandomCoordinates();\n        const check = snakeDots.find(([dotTop, dotLeft]) => dotTop === stoneTop && dotLeft === stoneLeft);\n  \n        if (check) {\n          stones.push(getRandomCoordinates());\n        }\n        \n        stones.push([stoneTop, stoneLeft]);\n      }\n      return stones;\n    }\n\n    this.setState({\n      stoneCords: checkCoordinates()\n    });\n  };\n\n  public render() {\n    const { isLightTheme, isFullScreen, pouse } = this.context;\n    const { snakeDots, foodCords, stoneCords, snakeSkin } = this.state;\n    let stones;\n    if (pouse) {\n      this.pouse();\n    } else {\n      this.play();\n    }\n\n    if (stoneCords.length > 0) {\n      stones = stoneCords.map((stone: number[], i) => {\n        return <Stone key={i} dot={stone} />;\n      });\n    }\n\n    return (\n      <GameField className=\"game-board\" isLightTheme={isLightTheme} fullScreen={isFullScreen}>\n        <Snake skin={snakeSkin} isLightTheme={isLightTheme} snakeDots={snakeDots} />\n        <Food dot={foodCords} />\n        {stones}\n        <Axis isLightTheme={isLightTheme} direction={DOWN} quantity={this.grid} />\n        <Axis isLightTheme={isLightTheme} direction={RIGHT} quantity={this.grid} />\n      </GameField>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  IconButton,\n  Theme\n} from '@material-ui/core';\nimport { useGameContext } from '../../context/GameContext';\n\ninterface IHeaderProps {\n  toggleMenu: (event: React.MouseEvent<HTMLButtonElement>) => void;\n  score: number;\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  title: {\n    flexGrow: 1,\n    color: theme.palette.primary.contrastText\n  },\n  wrapper: {\n    backgroundColor: theme.palette.primary.main\n  },\n  text: {\n    color: theme.palette.primary.contrastText\n  }\n}));\n\nconst Header: React.FunctionComponent<IHeaderProps> = (props) => {\n  const { endGame } = useGameContext();\n  const classes = useStyles();\n\n  return (\n      <AppBar className={classes.wrapper} position=\"static\">\n\n        <Toolbar>\n          <IconButton\n            className={classes.text}\n            onClick={props.toggleMenu}\n            disabled={endGame}\n            edge=\"start\"\n            aria-label=\"menu\"\n          >\n            <MenuIcon />\n          </IconButton>\n\n          <Typography variant=\"h6\" className={classes.title}>\n            Snake game\n          </Typography>\n\n          <Typography variant=\"h6\" className={classes.text}>\n            Score: {props.score}\n          </Typography>\n\n        </Toolbar>\n\n      </AppBar>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport { Box, Link, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  footer: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    width: '100%',\n    height: '64px',\n    backgroundColor: theme.palette.primary.main,\n  },\n  logo: {\n    width: '75px'\n  },\n  text: {\n    color: theme.palette.primary.contrastText\n  }\n}));\n\nconst Footer: React.FunctionComponent = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.footer}>\n      <Link href=\"https://github.com/johnneon\" className={classes.text} target=\"_blank\">\n        @johnneon\n      </Link>\n      <Typography variant=\"body1\" className={classes.text}>\n        &copy; 2021\n      </Typography>\n      <Link className={classes.logo} href=\"https://rs.school/js/\" variant=\"body2\">\n        <img src=\"assets/images/rs_school_js.svg\" alt=\"The Rolling Scopes\" />\n      </Link>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  Grid,\n  Theme,\n  Typography,\n  IconButton,\n} from '@material-ui/core';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\nimport Brightness5Icon from '@material-ui/icons/Brightness5';\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport { useGameContext } from '../../context/GameContext';\n\ninterface IMenuHeaderProps {\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    fullScreenBtn: {\n      color: theme.palette.primary.contrastText,\n      position: 'absolute',\n      top: 0,\n      right: 0\n    },\n    themeBtn: {\n      color: theme.palette.primary.contrastText,\n      position: 'absolute',\n      top: 0,\n      right: '48px'\n    },\n    soundBtn: {\n      color: theme.palette.primary.contrastText,\n      position: 'absolute',\n      top: 0,\n      right: '96px'\n    },\n    title: {\n      paddingTop: 15,\n      color: theme.palette.primary.contrastText\n    }\n  })\n);\n\nconst MenuHeader: React.FunctionComponent<IMenuHeaderProps> = (props) => {\n  const classes = useStyles();\n  const {\n    isFullScreen,\n    setFullScreen,\n    changeTheme,\n    isLightTheme,\n    sound,\n    setSound\n  } = useGameContext();\n\n  return (\n    <Grid item xs={12}>\n\n      <Typography variant=\"h1\" align=\"center\" component=\"h2\" className={classes.title}>\n        {props.children}\n      </Typography>\n\n      <IconButton\n        onClick={!isFullScreen ? setFullScreen?.enter : setFullScreen?.exit}\n        className={classes.fullScreenBtn}\n      >\n        {!isFullScreen\n        ? <FullscreenIcon />\n        : <FullscreenExitIcon />}\n      </IconButton>\n\n      <IconButton\n        onClick={setSound}\n        className={classes.soundBtn}\n      >\n        {!sound\n        ? <VolumeOffIcon />\n        : <VolumeUpIcon />}\n      </IconButton>\n\n      <IconButton\n        onClick={changeTheme}\n        className={classes.themeBtn}\n      >\n        {!isLightTheme\n        ? <Brightness5Icon />\n        : <Brightness7Icon />}\n      </IconButton>\n      \n      </Grid>\n  );\n};\n\nexport default MenuHeader;\n","import React from 'react';\nimport {\n  Button,\n  Grid,\n  Theme,\n  createStyles,\n  makeStyles\n} from '@material-ui/core';\nimport MenuHeader from './MenuHeader';\nimport { useGameContext } from '../../context/GameContext';\nimport { variables } from '../../variables';\n\nconst {\n  GAME_SETTINGS,\n  SOUND_SETTINGS,\n  SCORE\n} = variables;\ninterface IGeneralMenuProps {\n  changeMenu: (menuPage: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    btn: {\n      color: theme.palette.primary.contrastText,\n      marginBottom: 10\n    }\n  })\n);\n\nconst GeneralMenu: React.FunctionComponent<IGeneralMenuProps> = (props) => {\n  const classes = useStyles();\n  const { toggleMenu, resetGame, isGameStarted, startGame } = useGameContext();\n\n  const toSettings = () => {\n    props.changeMenu(GAME_SETTINGS);\n  };\n  const toSound = () => {\n    props.changeMenu(SOUND_SETTINGS);\n  };\n  const toScore = () => {\n    props.changeMenu(SCORE);\n  };\n  const newGame = () => {\n    toggleMenu();\n    resetGame();\n    startGame(true);\n  }\n\n  return (\n      <Grid container spacing={3}>\n\n        <MenuHeader>Menu</MenuHeader>\n\n        <Grid item container direction=\"column\" alignItems=\"center\">\n          {\n            isGameStarted\n            ? <Button\n              variant=\"outlined\"\n              color=\"inherit\"\n              className={classes.btn}\n              onClick={toggleMenu}\n            >\n              Continue\n            </Button>\n            : ''\n          }\n\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            onClick={newGame}\n          >\n            New game\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            data-name=\"one\"\n            onClick={toSettings}\n          >\n            Game settings\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            onClick={toSound}\n          >\n            Sound settings\n          </Button>\n\n          <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            onClick={toScore}\n          >\n            Score\n          </Button>\n        </Grid>\n      </Grid>\n  );\n};\n\nexport default GeneralMenu;\n","import React from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  Theme,\n  FormControlLabel,\n  Radio\n} from '@material-ui/core';\n\n\ninterface ICheckboxProps {\n  value: string;\n  label: string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    text: {\n      color: theme.palette.primary.contrastText,\n    },\n    root: {\n      color: theme.palette.primary.contrastText,\n      '&$checked': {\n        color: theme.palette.primary.contrastText,\n      },\n    },\n    checked: {}\n  })\n);\n\nconst Checkbox: React.FunctionComponent<ICheckboxProps> = (props) => {\n  const classes = useStyles();\n  const { value, label } = props;\n  return (\n    <FormControlLabel\n      value={value}\n      label={label}\n      className={classes.text}\n      labelPlacement=\"top\"\n      control={<Radio\n        classes={{\n          root: classes.root,\n          checked: classes.checked\n        }}\n      />}\n    />\n  );\n};\n\nexport default Checkbox;\n","import React from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  Grid,\n  Theme,\n  FormControl,\n  FormLabel,\n  RadioGroup,\n} from '@material-ui/core';\nimport Checkbox from './Checkbox';\n\n\ninterface IRadioControlsProps {\n  controls: Array<{\n    label: string;\n    value: string;\n  }>\n  value: string;\n  setValue: (value: string) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    legend: {\n      display: 'flex',\n      alignItems: 'center',\n      marginBottom: 10,\n      textAlign: 'center'\n    },\n    root: {\n      color: theme.palette.primary.contrastText,\n      '&$focused': {\n        color: theme.palette.primary.contrastText,\n      },\n    },\n    focused: {}\n  })\n);\n\nconst RadioControls: React.FunctionComponent<IRadioControlsProps> = (props) => {\n  const classes = useStyles();\n  const { value, setValue } = props;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue((event.target as HTMLInputElement).value);\n  };\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      item xs={12}\n    >\n\n      <FormControl component=\"fieldset\">\n        <FormLabel\n          component=\"legend\"\n          className={classes.legend}\n          classes={{\n            root: classes.root,\n            focused: classes.focused\n          }}\n        >\n          { props.children }\n        </FormLabel>\n        \n        <RadioGroup row value={value} onChange={handleChange}>\n\n          {props.controls.map((control, i) => {\n            return <Checkbox key={i} value={control.value} label={control.label} />;\n          })}\n\n        </RadioGroup>\n      </FormControl>\n      \n      </Grid>\n  );\n};\n\nexport default RadioControls;\n","import React from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  Box,\n  Grid,\n  Theme,\n  Tooltip,\n  Button\n} from '@material-ui/core';\nimport MenuHeader from './MenuHeader';\nimport RadioControls from './RadioControls';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { useGameContext } from '../../context/GameContext';\nimport { variables } from '../../variables';\n\nconst {\n  GAME_SETTINGS_INFO,\n  EASY_MODE,\n  NORMAL_MODE,\n  HARD_MODE,\n  DEFAULT_SNAKE,\n  COLORED_SNAKE\n} = variables;\n\ninterface IGameMenuProps {\n  goBack: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    btn: {\n      color: theme.palette.primary.contrastText,\n      margin: '0 auto 10px'\n    }\n  })\n);\n\nconst GameMenu: React.FunctionComponent<IGameMenuProps> = (props) => {\n  const { pouse, changeMode, mode, changeSkin, skin } = useGameContext();\n  const classes = useStyles({ pouse });\n\n  const gameControls = [\n    { value: EASY_MODE, label: \"Easy\" },\n    { value: NORMAL_MODE, label: \"Normal\" },\n    { value: HARD_MODE, label: \"Hard\" }\n  ];\n  const colorControls = [\n    { value: DEFAULT_SNAKE, label: \"Default\" },\n    { value: COLORED_SNAKE, label: \"Colored snake\" }\n  ];\n  const text = GAME_SETTINGS_INFO;\n\n  return (\n    <Box>\n\n      <Grid container spacing={3}>\n\n        <MenuHeader>Game settings</MenuHeader>\n\n        <RadioControls setValue={changeMode} value={mode} controls={gameControls}>\n          Game mode - \n          <Tooltip title={text}>\n            <HelpIcon />\n          </Tooltip>\n        </RadioControls>\n\n        <RadioControls setValue={changeSkin} value={skin} controls={colorControls}>\n          Color mode\n        </RadioControls>\n\n        <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            onClick={props.goBack}\n        >\n          Back\n        </Button>\n\n      </Grid>\n\n    </Box>\n  );\n};\n\nexport default GameMenu;\n","import React from 'react';\nimport {\n  Grid,\n  Slider,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  Box\n} from '@material-ui/core';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\ninterface ISliderControlProps {\n  volume: number;\n  setVolume: (volume: number) => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      color: theme.palette.primary.contrastText,\n    },\n    thumb: {\n      backgroundColor: theme.palette.primary.contrastText,\n      '&:focus, &:hover, &$active': {\n        boxShadow: 'inherit',\n      },\n    },\n    active: {},\n    valueLabel: {\n      left: 'calc(-50% + 4px)',\n    },\n    icon: {\n      color: theme.palette.primary.contrastText,\n      margin: '0 5px'\n    },\n    text: {\n      color: theme.palette.primary.contrastText,\n    },\n    bar: {\n      width: 200\n    }\n  })\n);\n\nconst SliderControl: React.FunctionComponent<ISliderControlProps> = (props) => {\n  const classes = useStyles();\n  const percent = 100;\n\n  const handleChange = (event: React.ChangeEvent<{}>, value: number | number[]) => {\n    props.setVolume(value as number / percent);\n  };\n\n  return (\n    <Box>\n    <Typography className={classes.text} id=\"non-linear-slider\" gutterBottom>\n      {props.children}\n    </Typography>\n    <Grid\n      item\n      container\n      direction=\"row\"\n      justify=\"center\"\n      alignItems=\"center\"\n      className={classes.bar}\n    >\n      <Grid item>\n        <VolumeDown className={classes.icon} />\n      </Grid>\n      <Grid item xs>\n        <Slider\n          value={props.volume * percent}\n          onChange={handleChange}\n          classes={{\n            root: classes.root,\n            thumb: classes.thumb,\n            active: classes.active,\n            valueLabel: classes.valueLabel\n          }}\n        />\n      </Grid>\n      <Grid item>\n        <VolumeUp className={classes.icon} />\n      </Grid>\n    </Grid>\n    </Box>\n  );\n};\n\nexport default SliderControl;\n","import React from 'react';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport SliderControl from './SliderControl';\nimport { useGameContext } from '../../context/GameContext';\n\ninterface ISoundControlsProps {\n}\n\nconst SoundControls: React.FunctionComponent<ISoundControlsProps> = (props) => {\n  const { musik, eatSoundEffect, endSoundEffect } = useGameContext();\n  \n  const setEffectsVolume = (volume: number) => {\n    eatSoundEffect.setVolume(volume);\n    endSoundEffect.setVolume(volume);\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"row\"\n      justify=\"space-around\"\n      alignItems=\"center\"\n      item xs={12}\n    >\n      \n      <SliderControl volume={musik.volume} setVolume={musik.setVolume}>\n        Music\n      </SliderControl>\n\n      <SliderControl volume={eatSoundEffect.volume} setVolume={setEffectsVolume}>\n        Game effects\n      </SliderControl>\n\n    </Grid>\n  );\n};\n\nexport default SoundControls;\n","import React from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  Box,\n  Grid,\n  Theme,\n  Button\n} from '@material-ui/core';\nimport MenuHeader from './MenuHeader';\nimport SoundControls from './SoundControls';\nimport { useGameContext } from '../../context/GameContext';\n\ninterface ISoundMenuProps {\n  goBack: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    btn: {\n      color: theme.palette.primary.contrastText,\n      margin: '0 auto 10px'\n    }\n  })\n);\n\nconst SoundMenu: React.FunctionComponent<ISoundMenuProps> = (props) => {\n  const { pouse } = useGameContext();\n  const classes = useStyles({ pouse });\n\n  return (\n    <Box>\n\n      <Grid container spacing={3}>\n\n        <MenuHeader>\n          Sound settings\n        </MenuHeader>\n\n        <SoundControls />\n\n        <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            onClick={props.goBack}\n        >\n          Back\n        </Button>\n\n      </Grid>\n\n    </Box>\n  );\n};\n\nexport default SoundMenu;\n","import React from 'react';\nimport {\n  makeStyles,\n  createStyles,\n  Box,\n  Grid,\n  Button,\n  Theme,\n  List,\n  ListItem,\n  ListItemText\n} from '@material-ui/core';\nimport MenuHeader from './MenuHeader';\nimport { getScore, IScore } from '../../utils/save';\n\ninterface IScoreTableProps {\n  goBack: () => void;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    btn: {\n      color: theme.palette.primary.contrastText,\n      margin: '0 auto 10px'\n    },\n    listItem: {\n      color: theme.palette.primary.contrastText,\n      borderBottom: `1px solid ${theme.palette.primary.contrastText}`,\n      display: 'flex',\n      justifyContent: 'space-between',\n      '&:last-child': {\n        borderBottom: 0\n      },\n      '& .MuiListItemText-root': {\n        flex: 'none'\n      }\n    }\n  })\n);\nconst ScoreTable: React.FunctionComponent<IScoreTableProps> = (props) => {\n  const classes = useStyles();\n  const data: IScore[] = getScore();\n\n  return (\n    <Box>\n\n      <Grid container spacing={3}>\n\n        <MenuHeader>Score</MenuHeader>\n\n        <Grid\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <List dense={true}>\n              {data.map((scoreItem, i) => {\n                const { name, score } = scoreItem;\n                return (\n                <ListItem className={classes.listItem} key={i}>\n                  <ListItemText\n                    primary={`${name}:`}\n                  />\n                  <ListItemText\n                    primary={`${score}`}\n                  />\n                </ListItem>\n                );\n              })}\n            </List>\n          \n        </Grid>\n\n        <Button\n            variant=\"outlined\"\n            color=\"inherit\"\n            className={classes.btn}\n            onClick={props.goBack}\n        >\n          Back\n        </Button>\n      </Grid>\n\n    </Box>\n\n\n  );\n};\n\nexport default ScoreTable;\n","import React, {useState} from 'react';\nimport {\n  Typography,\n  Theme,\n  createStyles,\n  makeStyles,\n  Button,\n  TextField,\n  withStyles\n} from '@material-ui/core';\nimport { useGameContext } from '../../context/GameContext';\nimport { saveScore } from '../../utils/save';\n\ninterface IGameOverScreenProps {\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    text: {\n      color: theme.palette.primary.contrastText,\n      marginBottom: 10\n    },\n    btn: {\n      color: theme.palette.primary.contrastText,\n    }\n  })\n);\n\nconst CssTextField = withStyles((theme: Theme) => ({\n  root: {\n    marginBottom: 15,\n    '& label.Mui-focused': {\n      color: theme.palette.primary.contrastText,\n    },\n    '& .MuiInput-underline:after': {\n      borderBottomColor: theme.palette.primary.contrastText,\n    },\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'red',\n      },\n      '&:hover fieldset': {\n        borderColor: 'yellow',\n      },\n      '&.Mui-focused fieldset': {\n        borderColor: 'green',\n      },\n    },\n  },\n}))(TextField);\n\n\nconst GameOverScreen: React.FunctionComponent<IGameOverScreenProps> = (props) => {\n  const classes = useStyles();\n  const { score, resetGame } = useGameContext();\n  const [name, setName] = useState<string>('');\n  const [error, setError] = useState<boolean>(false);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value);\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleClick();\n    }\n  };\n\n  const handleClick = () => {\n    const regex = /[a-zA-Z0-9]+/;\n    if (name.length < 3 || name.length > 6 || !regex.test(name)) {\n      setError(true);\n    } else {\n      resetGame();\n      saveScore({ name, score });\n    }\n  };\n\n  return (\n    <>\n      <Typography className={classes.text} variant=\"h2\">Game over</Typography>\n      <Typography className={classes.text} variant=\"h3\">Your score is {score}!</Typography>\n      <CssTextField\n        label=\"Enter your name\"\n        onChange={handleChange}\n        onKeyPress={handleKeyPress}\n        value={name}\n        helperText=\"Max lingth 6. Min length 3.\"\n        error={error}\n      />\n      <Button\n        variant=\"outlined\"\n        color=\"inherit\"\n        className={classes.btn}\n        onClick={handleClick}\n      >\n        Submit\n      </Button>\n    </>\n  );\n};\n\nexport default GameOverScreen;\n","import React, { useState } from 'react';\nimport {\n  createStyles,\n  makeStyles,\n  Box,\n  Grid,\n  Theme,\n} from '@material-ui/core';\nimport GeneralMenu from './GeneralMenu';\nimport GameMenu from './GameMenu';\nimport SoundMenu from './SoundMenu';\nimport ScoreTable from './ScoreTable';\nimport { useGameContext } from '../../context/GameContext';\nimport { variables } from '../../variables';\nimport GameOverScreen from './GameOverScreen';\n\nconst {\n  GENERAL,\n  GAME_SETTINGS,\n  SOUND_SETTINGS,\n  SCORE\n} = variables;\n\ninterface IMenuProps {\n}\n\ntype StyledProps = {\n  pouse: boolean;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    wrapper: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 3, \n      width: '100%',\n      height: '100%',\n      padding: '10px',\n      background: theme.palette.secondary.main,\n      transition: 'all .3s linear',\n      visibility: (props: StyledProps) => props.pouse ? 'visible' : 'hidden',\n      opacity: (props: StyledProps) => props.pouse ? 1 : 0,\n    },\n    container: {\n      height: '100%'\n    }\n  })\n);\n\nconst Menu: React.FunctionComponent<IMenuProps> = (props) => {\n  const { pouse, endGame } = useGameContext();\n  const classes = useStyles({ pouse });\n  const [menu, setMenu] = useState<string>(GENERAL);\n\n  const changeMenuHandler = (menuPage: string) => {\n    setMenu(menuPage);\n  }\n\n  const backToGeneral = () => {\n    setMenu(GENERAL);\n  };\n\n  const provider = (page: string) => {\n    switch (page) {\n      case GENERAL:\n        return <GeneralMenu changeMenu={changeMenuHandler} />\n      case GAME_SETTINGS:\n        return <GameMenu goBack={backToGeneral} />\n      case SOUND_SETTINGS:\n        return <SoundMenu goBack={backToGeneral} />\n      case SCORE:\n        return <ScoreTable goBack={backToGeneral} />\n    \n      default:\n        <GeneralMenu changeMenu={changeMenuHandler} />\n        break;\n    }\n  }\n\n  return (\n    <Box className={classes.wrapper}>\n\n      <Grid\n        className={classes.container}\n        container\n        spacing={3}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n\n        {endGame ? <GameOverScreen /> : provider(menu)}\n        \n      </Grid>\n\n    </Box>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\nimport { unstable_createMuiStrictModeTheme as createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst dark = createMuiTheme({\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    type: 'dark',\n    primary: {\n      main: '#212121',\n      light: '#484848',\n      dark: '#000000',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: 'rgba(0, 0, 0, .7)',\n      light: '#ffffff',\n      dark: '#bdb9b7',\n      contrastText: '#fff'\n    },\n    error: {\n      main: '#f44336',\n      light: '#ff7961',\n      dark: '#ba000d',\n      contrastText: '#000000',\n    },\n    success: {\n      main: '#76ff03',\n      light: '#b0ff57',\n      dark: '#32cb00',\n      contrastText: '#000000',\n    },\n    background: {\n      paper: '#424242',\n      default: '#303030'\n    },\n    text: {\n      primary: '#fff',\n      secondary: 'rgba(255, 255, 255, 0.7)',\n      disabled: 'rgba(255, 255, 255, 0.5)',\n      hint: 'rgba(255, 255, 255, 0.5)',\n    }\n  },\n  typography: {\n    htmlFontSize: 16,\n    h1: {\n      fontSize: '1.5rem',\n      fontWeight: 700,\n    },\n    h2: {\n      fontSize: '1.25rem',\n      fontWeight: 700,\n    },\n    h3: {\n      fontSize: '1.13rem',\n      fontWeight: 700,\n    },\n    h4: {\n      fontSize: '1rem',\n      fontWeight: 700,\n    },\n    h5: {\n      fontSize: '1rem',\n      fontWeight: 700,\n    },\n    h6: {\n      fontSize: '1rem',\n      fontWeight: 700,\n    },\n    body1: {\n      fontSize: '0.875rem',\n    },\n    body2: {\n      fontSize: '1rem',\n    },\n    subtitle1: {\n      fontSize: '0.875rem',\n    },\n  },\n});\n\nconst light = createMuiTheme({\n  palette: {\n    common: {\n      black: '#000',\n      white: '#fff',\n    },\n    type: 'light',\n    primary: {\n      main: '#efebe9',\n      light: '#ffffff',\n      dark: '#bdb9b7',\n      contrastText: '#000000'\n    },\n    secondary: {\n      main: 'rgba(255, 255, 255, .7)',\n      light: '#ffffff',\n      dark: '#bdb9b7',\n      contrastText: '#fff'\n    },\n    error: {\n      main: '#f44336',\n      light: '#ff7961',\n      dark: '#ba000d',\n      contrastText: '#000000',\n    },\n    success: {\n      main: '#76ff03',\n      light: '#b0ff57',\n      dark: '#32cb00',\n      contrastText: '#000000',\n    },\n    background: {\n      paper: '#424242',\n      default: '#303030'\n    },\n    text: {\n      primary: '#000000',\n      secondary: 'rgba(255, 255, 255, 0.7)',\n      disabled: 'rgba(255, 255, 255, 0.5)',\n      hint: 'rgba(255, 255, 255, 0.5)',\n    }\n  },\n  typography: {\n    htmlFontSize: 16,\n    h1: {\n      fontSize: '1.5rem',\n      fontWeight: 700,\n    },\n    h2: {\n      fontSize: '1.25rem',\n      fontWeight: 700,\n    },\n    h3: {\n      fontSize: '1.13rem',\n      fontWeight: 700,\n    },\n    h4: {\n      fontSize: '1rem',\n      fontWeight: 700,\n    },\n    h5: {\n      fontSize: '1rem',\n      fontWeight: 700,\n    },\n    h6: {\n      fontSize: '1rem',\n      fontWeight: 700,\n    },\n    body1: {\n      fontSize: '0.875rem',\n    },\n    body2: {\n      fontSize: '1rem',\n    },\n    subtitle1: {\n      fontSize: '0.875rem',\n    },\n  },\n});\n\ninterface IThemeProps {\n  isLightTheme: boolean;\n}\n\nexport const CustomThemeProvider: React.FunctionComponent<IThemeProps> = (props) => {\n  const { children, isLightTheme } = props;\n\n  return (\n    <ThemeProvider theme={!isLightTheme ? dark : light}>\n      {children}\n    </ThemeProvider>\n  );\n}","import { useState } from 'react';\nimport useSound from 'use-sound';\nimport { PlayFunction } from 'use-sound/dist/types';\n\nexport interface IuseSoundControl {\n  play: PlayFunction,\n  pause: (id?: string | undefined) => void,\n  stop: (id?: string | undefined) => void,\n  setVolume: (value: number) => void;\n  isPlaying: boolean;\n  volume: number;\n}\n\nexport const useSoundControl =  (audioUrl: string, loop?: boolean): IuseSoundControl => {\n  const [volume, setVolume] = useState<number>(.5);\n  const [playAgain, setplayAgain] = useState<boolean>(false);\n\n  const options = {\n    volume: volume,\n    onend: () => {\n      setplayAgain(true);\n    }\n  };\n  \n  const sound = useSound(audioUrl, options);\n  const [play, { pause, stop, isPlaying }] = sound;\n\n  if (loop) {\n    if (playAgain) {\n      stop();\n      play();\n      setVolume(volume);\n      setplayAgain(false);\n    }\n  }\n\n  return {\n    play,\n    pause,\n    stop,\n    setVolume,\n    isPlaying,\n    volume\n  };\n}","import React, { useState, useCallback, useEffect } from 'react';\nimport {\n  FullScreen,\n  useFullScreenHandle,\n  FullScreenHandle\n} from \"react-full-screen\";\nimport { Box, makeStyles } from '@material-ui/core';\nimport Game from './components/Game/Game';\nimport Header from './components/UI/Header';\nimport Footer from './components/UI/Footer';\nimport Menu from './components/UI/Menu';\nimport { CustomThemeProvider } from './themes/CustomThemeProvider';\nimport { GameContext } from './context/GameContext';\nimport { IuseSoundControl, useSoundControl } from './hooks/sound.hook';\nimport { variables } from './variables';\nimport { getAppState, IAppState, saveAppState } from './utils/save';\n\nconst { EASY_MODE, DEFAULT_SNAKE, APP_STATE } = variables;\n\nconst useStyles = makeStyles({\n  wrapper: {\n    position: 'relative',\n    '@media(max-width: 768px)': {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'space-between',\n      height: '100vh'\n    },\n  },\n  gameWrap: {\n    position: 'relative',\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  const musik: IuseSoundControl = useSoundControl('./audio/musik.mp3', true);\n  const eatSoundEffect: IuseSoundControl = useSoundControl('./audio/eat.mp3');\n  const endSoundEffect: IuseSoundControl = useSoundControl('./audio/lose.mp3');\n  const screen: FullScreenHandle = useFullScreenHandle();\n  const [open, setOpen] = useState<boolean>(true);\n  const [score, setScore] = useState<number>(0);\n  const [isLightTheme, setIsLightTheme] = useState<boolean>(false);\n  const [endGame, setEndGame] = useState<boolean>(false);\n  const [sound, setSound] = useState<boolean>(true);\n  const [mode, setMode] = useState<string>(EASY_MODE);\n  const [skin, setSkin] = useState<string>(DEFAULT_SNAKE);\n  const [fullScreen, setFullScreen] = useState<boolean>(screen.active);\n  const [isChanged, setIsChanged] = useState<boolean>(false);\n  const [isGameStarted, setIsGameStarted] = useState<boolean>(false);\n\n  const updateAppState = (state: IAppState) => {\n    try {\n      const {\n        open,\n        score,\n        isLightTheme,\n        sound,\n        mode,\n        skin,\n        isGameStarted\n      } = state;\n  \n      setOpen(open);\n      setScore(score);\n      setIsLightTheme(isLightTheme);\n      setSound(sound);\n      setMode(mode);\n      setSkin(skin);\n      setIsGameStarted(isGameStarted);\n    } catch (e) {\n      return;\n    }\n  }\n\n  useEffect(() => {\n    const savedAppState = getAppState(APP_STATE);\n    if (savedAppState) {\n      updateAppState(savedAppState);\n    }\n  }, []);\n\n  useEffect(() => {\n    const state = {\n      open,\n      score,\n      isLightTheme,\n      sound,\n      mode,\n      skin,\n      isGameStarted\n    };\n    saveAppState(state, APP_STATE);\n  }, [\n    open,\n    score,\n    isLightTheme,\n    sound,\n    mode,\n    skin,\n    isGameStarted\n  ]);\n\n  const toggleMenu = () => {\n    setOpen(!open);\n\n    if (open && sound) {\n      musik.play();\n    } else {\n      musik.pause();\n    }\n  };\n\n  const gameOver = () => {\n    console.log(score);\n    if (sound) {\n      musik.stop();\n      endSoundEffect.play();\n    }\n    setOpen(!open);\n    setEndGame(true);\n  };\n\n  const updateScore = () => {\n    if (sound) {\n      eatSoundEffect.play();\n    }\n    setScore(score + 1);\n  };\n\n  const resetGame = () => {\n    if (sound) {\n      musik.stop();\n    }\n    setScore(0);\n    setEndGame(false);\n    setIsChanged(!isChanged);\n  };\n\n  const setTheme = () => {\n    setIsLightTheme(!isLightTheme);\n  };\n\n  const reportChange = useCallback((fullScreen: boolean, screen: FullScreenHandle) => {\n    setFullScreen(screen.active);\n  }, []);\n\n  const toggleSound = () => {\n    setSound(!sound);\n  };\n\n  const changeMode = (modeName: string) => {\n    if (sound) {\n      musik.stop();\n    }\n    setScore(0);\n    setMode(modeName);\n    setIsChanged(!isChanged);\n  }\n\n  const changeSkin = (skin: string) => {\n    setSkin(skin);\n  }\n\n  const startGame = (start: boolean) => {\n    setIsGameStarted(start);\n  }\n\n  return (\n    <CustomThemeProvider isLightTheme={isLightTheme}>\n      <GameContext.Provider value={{\n        pouse: open,\n        toggleMenu: toggleMenu,\n        isFullScreen: fullScreen,\n        setFullScreen: screen,\n        changeTheme: setTheme,\n        isLightTheme,\n        endGame,\n        score,\n        resetGame,\n        musik,\n        eatSoundEffect,\n        endSoundEffect,\n        setSound: toggleSound,\n        sound,\n        mode,\n        changeMode,\n        skin,\n        changeSkin,\n        startGame,\n        isGameStarted\n      }}>\n      <FullScreen handle={screen} onChange={reportChange}>\n        <Box className={`${classes.wrapper} app`}>\n          {/* <button onClick={play}>play</button> */}\n\n          <Header\n            toggleMenu={toggleMenu}\n            score={score}\n          />\n\n          <Box className={classes.gameWrap}>\n            <Game\n              togglePouse={toggleMenu}\n              updateScore={updateScore}\n              gameOver={gameOver}\n              mode={mode}\n              skin={skin}\n              isChanged={isChanged}\n              startGame={startGame}\n            />\n            <Menu />\n          </Box>\n\n          <Footer />\n\n        </Box>\n      </FullScreen>\n      </GameContext.Provider>\n    </CustomThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}